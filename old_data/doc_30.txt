We then reflect on what we have learned in some unconscious way and occasionally come up with verbal observations, summaries, ina word reflections. It is fascinating that combining the ideas we discussed bringsus into contact with such topics.To conclude, and for what it is worth, out of the forty years I have followedAI, this is by far the most exciting period. I agree with those who think LLMsare a major milestone and believe the ideas behind them including the transformer architecture will remain important even in the light of future progress.The questions they raise are interesting and important enough that even asthe specialists make remarkable progress we need not leave the field to them,but as scientists and thinkers we should engage and try to contribute.A Grammars and parsingMost readers will have encountered the idea of sentence diagram, which graphically represents the decomposition of a sentence into clauses with a subject,verb and object, the assignment of adjectives and prepositional phrases to thenouns and verbs they modify, and so on. Formal versions of this concept arefoundational in linguistics and computer science, and a short introduction orreview is a good way to bring the general ideas we are discussing to life.A formal grammar can be given by a set of production rules which canbe used to generate grammatical strings. A simple example is in Figure 3.Each line is a rule, which is made up of two strings of symbols separated by, the left hand side or lhs and right hand side or rhs. These symbols can beterminals which appear in the language such as , , x, 0 and so on in ourexample or nonterminals which do not such as TERM.These rules are used as follows We start with a string S containing a distinguished start symbol here EXPR. We then iterate the following processchoose a rule whose lhs occurs in S, and apply it by substituting one occurrenceof this lhs in S with the rhs. Every string S which can be obtained by a finitesequence of these operations is considered grammatical, and by keeping track31EXPR TERM EXPR17EXPR EXPR EXPR TERMTERM VALUE TERMTERM EXPR TERM VALUEVALUE xVALUE yVALUE 1Figure 3 A grammar for arithmetic expressions.of the rule applications we get a parse tree. This is a graph whose nodes aresymbols and whose edges connect a symbol which appears on the lhs of a ruleapplication with the nodes for each of the symbols which appear on the rhs.42A good exercise is to work out the parse tree for the expression y 1 x andcheck that multiplication takes precedence over addition.Our example of a grammar is a contextfree grammar, meaning that theleft hand side of each rule consists of a single symbol. If we do not put thisrestriction, the resulting class of languages are universal computers and thussuffer from potential undecidability. There is also a more restricted class ofgrammars called regular grammars this hierarchy was found by Chomsky, butthese cannot describe nested structures such as the parentheses of Eq. 17.