I have given many lectures telling computer scientists about physics and physicists about computational topics, and benefited from conver sations with many people more than I can name here, but let me thank Gerald Jay Sussman, David McAllester, Yann LeCun, Sanjeev Arora, Surya Ganguli, Jeremy Avigad, Vijay Balasubramanian, Dmitri Chklovskii, David Donoho, Steve Skiena, Christian Szegedy, Misha Tsodyks, Tony Wu and the 2At least, this was the case before March 2023. Currently the weights and even the de sign parameters of GPT4, the most advanced LLM, are held in confidence by OpenAI as proprietary information. 3 many speakers in the CMSA New Technologies seminar series,3 and Josef Urban and the AITP community.4 Thanks to David McAllester and Sergiy Verstyuk for comments on the first draft. These notes would not have been possible with out their input and advice, and I hope their signal to noise ratio approaches that of what they shared with me. 2 Symbolic and connectionist AI The goal of artificial intelligence is to build computational systems which can perform tasks which require intelligence. Although intelligence is hard to define precisely, an operational definition suitable for LLMs is ability at tasks requiring language, reasoning, and planning, as judged by humans who interact with the system. Some famous and difficult challenge tasks include playing chess 122, proving mathematical theorems 104, and answering natural language questions using generally known facts and common sense.5 These problems have been the subject of intense investigation since the mid 50s, and a few textbooks and histories are 93, 105, 119, 121. Essentially from the start, two broad approaches were set out, which would later be called sym bolic and connectionist AI.6 The symbolic approach originated in mathematical logic and generative linguistic theory, and tracked the development of computer technology both hardware and software as a tool for solving practical and scientific problems. Central topics in this approach are formal logic and lan guage theory, search and heuristics, and engineering techniques for designing and building large and complex systems. Symbolic AI systems are designed, meaning that their creators develop a de tailed understanding of the task, and encode this understanding into the system by programming, by hardware design and otherwise. As an example, consider the task of parsing given an input string of words, determine its grammatical structure. Most of us learned to diagram sentences in elementary school, and although linguists have developed far more sophisticated notions of grammar, this simple notion gives the right idea. The grammar of a language is encoded in rules, which belong to a formal framework see the appendix for the example of contextfree grammars. Given such a framework, one can design a parsing algorithm which takes as input a rule set and an input string, and produces an output which states whether the string is a grammatical sentence and if so makes its structure explicit.